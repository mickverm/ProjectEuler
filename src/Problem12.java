/**
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * <p>
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * <p>
 * Let us list the factors of the first seven triangle numbers:
 * <p>
 * 1: 1
 * 3: 1,3
 * 6: 1,2,3,6
 * 10: 1,2,5,10
 * 15: 1,3,5,15
 * 21: 1,3,7,21
 * 28: 1,2,4,7,14,28
 * We can see that 28 is the first triangle number to have over five divisors.
 * <p>
 * What is the value of the first triangle number to have over five hundred divisors?
 * <p>
 * Solution: 76576500
 */
public class Problem12 {

    public static void main(String[] args) {
        long start = System.currentTimeMillis();
        run();
        long stop = System.currentTimeMillis();
        System.out.println("Duration: " + (stop - start) + "ms");
    }

    private static void run() {
        int i = 0;
        int triangleNumber = 1;

        while (getNumberOfDivisors(triangleNumber) < 500) {
            triangleNumber = getTriangleNumber(i++);
        }

        System.out.println(triangleNumber);
    }

    private static int getTriangleNumber(int number) {
        return number * (number + 1) / 2;
    }

    private static int getNumberOfDivisors(int number) {
        int nod = 0;
        int sqrt = (int) Math.sqrt(number);

        for (int i = 1; i <= sqrt; i++)
            if (number % i == 0)
                nod += 2;

        //Correction if the number is a perfect square
        if (sqrt * sqrt == number)
            nod--;

        return nod;
    }
}
